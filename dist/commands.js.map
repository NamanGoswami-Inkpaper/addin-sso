{"version":3,"file":"commands.js","mappings":";;;;;;;;;AAAA;;;;AAKA;AAEAA,MAAM,CAACC,OAAO,CAAC;EACb;AAAA,CACD,CAAC;AAEF;;;;AAIA,SAASC,MAAMA,CAACC,KAAiC;EAC/C,IAAMC,OAAO,GAAsC;IACjDC,IAAI,EAAEL,MAAM,CAACM,YAAY,CAACC,2BAA2B,CAACC,oBAAoB;IAC1EJ,OAAO,EAAE,mBAAmB;IAC5BK,IAAI,EAAE,YAAY;IAClBC,UAAU,EAAE;GACb;EAED;EACAV,MAAM,CAACW,OAAO,CAACC,OAAO,CAACC,IAAI,CAACC,oBAAoB,CAACC,YAAY,CAAC,QAAQ,EAAEX,OAAO,CAAC;EAEhF;EACAD,KAAK,CAACa,SAAS,EAAE;AACnB;AAEA,SAASC,SAASA,CAAA;EAChB,OAAO,OAAOC,IAAI,KAAK,WAAW,GAC9BA,IAAI,GACJ,OAAOC,MAAM,KAAK,WAAW,GAC7BA,MAAM,GACN,OAAOC,MAAM,KAAK,WAAW,GAC7BA,MAAM,GACNC,SAAS;AACf;AAEA,IAAMC,CAAC,GAAGL,SAAS,EAAS;AAE5B;AACAK,CAAC,CAACpB,MAAM,GAAGA,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UE3CjB;UACA;UACA;UACA;UACA","sources":["webpack://office-addin-taskpane-sso-js/./src/commands/commands.ts","webpack://office-addin-taskpane-sso-js/webpack/before-startup","webpack://office-addin-taskpane-sso-js/webpack/startup","webpack://office-addin-taskpane-sso-js/webpack/after-startup"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nfunction action(event: Office.AddinCommands.Event) {\n  const message: Office.NotificationMessageDetails = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal() as any;\n\n// The add-in command functions need to be available in global scope\ng.action = action;\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/commands/commands.ts\"](0, __webpack_exports__);\n",""],"names":["Office","onReady","action","event","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","completed","getGlobal","self","window","global","undefined","g"],"sourceRoot":""}